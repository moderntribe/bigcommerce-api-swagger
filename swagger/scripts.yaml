swagger: "2.0"
info:
  title: BigCommerce API
  version: 3.0.0b
  description: A Swagger Document for the BigCommmerce v3 Scripts API.
  termsOfService: "http://www.bigcommerce.com/terms"
host: api.bigcommerce.com
basePath: "/stores/{store_id}/v3"
tags:
  - name: Script
    description: BigCommerce Scripts API Definition.
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /content/scripts:
    post:
      tags:
        - Script
      summary: Creates a script.
      operationId: createScript
      parameters:
        - name: scriptBody
          in: body
          required: true
          schema:
            $ref: "#/definitions/ScriptPost"
      responses:
        200:
          schema:
            $ref: "#/definitions/ScriptResponse"
          description: |
            Success.
        422:
          schema:
            $ref: "#/definitions/ErrorResponse"
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
    get:
      tags:
        - Script
      summary: Gets all scripts.
      operationId: getScripts
      parameters:
        - $ref: "#/parameters/PageParam"
        - $ref: "#/parameters/LimitParam"
        - $ref: "#/parameters/ScriptsSortKeyParam"
        - $ref: "#/parameters/DirectionParam"
      responses:
        200:
          schema:
            $ref: "#/definitions/ScriptsResponse"
          description: |
            Success.
        422:
          schema:
            $ref: "#/definitions/ErrorResponse"
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
  /content/scripts/{uuid}:
    get:
      tags:
        - Script
      summary: Gets a script.
      operationId: getScript
      parameters:
        - $ref: "#/parameters/ScriptUUID"
      responses:
        200:
          schema:
            $ref: "#/definitions/ScriptResponse"
          description: Success
        404:
          description: |
            The resource was not found.
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          schema:
            $ref: "#/definitions/ErrorResponse"
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
    put:
      tags:
        - Script
      summary: Updates a script.
      operationId: updateScript
      parameters:
        - $ref: "#/parameters/ScriptUUID"
        - name: scriptBody
          in: body
          required: true
          schema:
            $ref: "#/definitions/ScriptPut"
      responses:
        200:
          schema:
            $ref: "#/definitions/ScriptResponse"
          description: Success
        404:
          description: |
            The resource was not found.
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          schema:
            $ref: "#/definitions/ErrorResponse"
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
    delete:
      tags:
        - Script
      summary: Deletes a script.
      operationId: deleteScript
      parameters:
        - $ref: "#/parameters/ScriptUUID"
      responses:
        204:
          description: An empty response.
        404:
          description: |
            The resource was not found.
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          schema:
            $ref: "#/definitions/ErrorResponse"
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
parameters:
  ScriptUUID:
    name: uuid
    description: The identifier for a specific script.
    required: true
    in: path
    type: string
    format: uuid
  PageParam:
    name: page
    description: |
      Specifies the page number in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  LimitParam:
    name: limit
    description: |
      Controls the number of items per page in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  ScriptsSortKeyParam:
    name: sort
    description: |
      Scripts field name to sort by.
    required: false
    in: query
    type: string
  DirectionParam:
    name: direction
    description: |
      Sort direction. Acceptable values are: `asc`, `desc`.
    required: false
    in: query
    type: string
definitions:
  Script:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: The primary identifier.
      name:
        type: string
        description: The user-friendly name.
      description:
        type: string
        description: The user-friendly description.
      html:
        type: string
        description: An html string containing exactly one `script` tag. Only present if `kind` is `script_tag`
      src:
        type: string
        description: The `src` attribute of the script to load. Only present if `kind` is `src`.
      auto_uninstall:
        type: boolean
        description: Whether to uninstall this script when the app associated with it is removed.
      load_method:
        type: string
        description: The load method to use for the script. Values are `default`, `async`, or `defer`.
      location:
        type: string
        description: Where on the page to place the script. Values are `head` or `footer`.
      visibility:
        type: string
        description: Which set of pages the script should load on. The values allowed for this parameter are `storefront`, `all_pages`, `checkout` and `order_confirmation`. Please note that you need to have `Checkout content` scope to use `all_pages` and `checkout`.
      kind:
        type: string
        description: What type of script this is. Values are `src` - a `script` tag will be generated with its `src` attribute set to the value of `src`; `script_tag` - The value of `html` will be injected directly onto the page.
      api_client_id:
        type: string
        description: The client id of the API user that created this script, or blank if created by other means.
      date_created:
        type: string
        format: date-time
        description: The date on which this object was initially created.
      date_modified:
        type: string
        format: date-time
        description: The date on which this object was last updated.
    example:
      uuid: 2bf40be2-e57a-4bc8-860a-5bf45edd3795
      name: jQuery
      description: The Write Less, Do More, JavaScript Library.
      src: https://code.jquery.com/jquery-3.2.1.min.js
      auto_uninstall: true
      load_method: defer
      location: head
      visibility: storefront
      kind: src
      api_client_id: d1j42k5q76xsm15fa3g8sp2egytoixo
      date_created: '2017-12-05T23:37:45.506Z'
      date_modified: '2017-12-05T23:37:45.506Z'
  ScriptPost:
    required:
      - name
    properties:
      name:
        type: string
        description: The user-friendly name.
        minLength: 1
        maxLength: 255
      description:
        type: string
        description: The user-friendly description.
        maxLength: 255
      html:
        type: string
        description: An html string containing exactly one `script` tag. Required if `kind` is `script_tag`.
        maxLength: 65535
      src:
        type: string
        description: The `src` attribute of the script to load. Required if `kind` is `src`. Must be in `https` format.
        maxLength: 255
      auto_uninstall:
        type: boolean
        description: Whether to uninstall this script when the app associated with it is removed.
        default: true
      load_method:
        type: string
        description: The load method to use for the script. Acceptable values are `default`, `async`, or `defer`.
        default: defer
      location:
        type: string
        description: Where on the page to place the script. Acceptable values are `head` or `footer`.
        default: footer
      visibility:
        type: string
        description: Which set of pages the script should load on. The values allowed for this parameter are `storefront`, `all_pages`, `checkout` and `order_confirmation`. Please note that you need to have `Checkout content` scope to use `all_pages` and `checkout`.
        default: storefront
      kind:
        type: string
        description: What type of script this is. Acceptable values are `src` - a `script` tag will be generated with its `src` attribute set to the value of `src`; `script_tag` - The value of `html` (which must contain a single `script` tag) will be injected directly onto the page.
        default: src
  ScriptPut:
      properties:
        name:
          type: string
          description: The user-friendly name.
          minLength: 1
          maxLength: 255
        description:
          type: string
          description: The user-friendly description.
          maxLength: 255
        html:
          type: string
          description: An html string containing exactly one `script` tag. Required if `kind` is included and equal to `script_tag`.
          maxLength: 65535
        src:
          type: string
          description: The `src` attribute of the script to load. Required if `kind` is included and equal to `src`. Must be in `https` format.
          maxLength: 255
        auto_uninstall:
          type: boolean
          description: Whether to uninstall this script when the app associated with it is removed.
          default: true
        load_method:
          type: string
          description: The load method to use for the script. Acceptable values are `default`, `async`, or `defer`.
          default: defer
        location:
          type: string
          description: Where on the page to place the script. Acceptable values are `head` or `footer`.
          default: footer
        visibility:
          type: string
          description: Which set of pages the script should load on. The values allowed for this parameter are `storefront`, `all_pages`, `checkout` and `order_confirmation`. Please note that you need to have `Checkout content` scope to use `all_pages` and `checkout`.
          default: storefront
        kind:
          type: string
          description: What type of script this is. Acceptable values are `src` - a `script` tag will be generated with its `src` attribute set to the value of `src`; `script_tag` - The value of `html` (which must contain a single `script` tag) will be injected directly onto the page.
          default: src
  ScriptResponse:
    type: object
    properties:
      data:
        $ref: "#/definitions/Script"
  ScriptsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Script"
      meta:
        $ref: "#/definitions/CollectionMeta"
  CollectionMeta:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        pagination:
          $ref: "#/definitions/Pagination"
  Pagination:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
  ErrorResponse:
    allOf:
    - $ref: "#/definitions/BaseError"
    - type: object
      properties:
        errors:
          $ref: "#/definitions/DetailedErrors"
  BaseError:
    type: object
    description: |
      Error payload for the BigCommerce API.
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
  DetailedErrors:
    type: object
    additionalProperties:
      type: string
