swagger: "2.0"
info:
  title: BigCommerce API
  version: 3.0.0b
  description: A Swagger Document for the BigCommmerce v3 Subscribers API.
  termsOfService: "http://www.bigcommerce.com/terms"
host: api.bigcommerce.com
basePath: "/stores/{store_id}/v3"
tags:
  - name: Subscribers
    description: BigCommerce Customers API Definition.
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /customers/subscribers:
    get:
      tags:
        - Subscribers
      description: |
        Returns a paginated Subscribers collection.
      operationId: getSubscribers
      parameters:
        - $ref: "#/parameters/FilterEmailParam"
        - $ref: "#/parameters/FilterFirstNameParam"
        - $ref: "#/parameters/FilterLastNameParam"
        - $ref: "#/parameters/FilterSourceParam"
        - $ref: "#/parameters/FilterOrderIdParam"
        - $ref: "#/parameters/FilterDateCreatedParam"
        - $ref: "#/parameters/FilterDateModifiedParam"
        - $ref: "#/parameters/PageParam"
        - $ref: "#/parameters/LimitParam"
      responses:
        200:
          description: |
            An array of subscriber objects and metadata.
          schema:
            $ref: "#/definitions/SubscriberCollectionResponse"
    post:
      tags:
        - Subscribers
      description: |
        Creates a `Subscriber` object.
      operationId: createSubscriber
      parameters:
        - name: subscriber
          in: body
          required: true
          description: |
            `Subscriber` object.
          schema:
            $ref: "#/definitions/SubscriberPost"
      responses:
        200:
          description: |
            A `Subscriber` object.
          schema:
            $ref: "#/definitions/SubscriberResponse"
        422:
          description: |
            The `Subscriber` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            The `Subscriber` was in conflict with another subscriber. This is the result of duplicate unique values, such as email.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Subscribers
      description: |
        Deletes a Subscriber or Subscribers from BigCommerce Customers.
      operationId: deleteSubscribers
      parameters:
        - $ref: "#/parameters/FilterEmailParam"
        - $ref: "#/parameters/FilterFirstNameParam"
        - $ref: "#/parameters/FilterLastNameParam"
        - $ref: "#/parameters/FilterSourceParam"
        - $ref: "#/parameters/FilterOrderIdParam"
        - $ref: "#/parameters/FilterDateCreatedParam"
        - $ref: "#/parameters/FilterDateModifiedParam"
      responses:
        204:
          description: |
            An empty response.
  /customers/subscribers/{subscriber_id}:
    parameters:
      - $ref: "#/parameters/SubscriberIdParam"
    get:
      tags:
        - Subscribers
      description:
        Gets `Subscriber` object.
      operationId: getSubscriberById
      responses:
        200:
          description: |
            A `Subscriber` object.
          schema:
            $ref: "#/definitions/SubscriberResponse"
        404:
          description: |
            The resource was not found.
          schema:
            $ref: "#/definitions/NotFound"
    put:
      tags:
        - Subscribers
      description: |
        Updates a `Subscriber` object.
      operationId: updateSubscriber
      parameters:
        - name: subscriber
          in: body
          required: true
          description: |
            Returns a `Subscriber` object.
          schema:
            $ref: "#/definitions/SubscriberPut"
      responses:
        200:
          description: |
            A `Subscriber` object.
          schema:
            $ref: "#/definitions/SubscriberResponse"
        404:
          description: |
            The resource was not found.
          schema:
            $ref: "#/definitions/NotFound"
        422:
          description: |
            The `Subscriber` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            The `Subscriber` was in conflict with another subscriber. This is the result of duplicate unique values, such as `email`.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Subscribers
      description: |
        Deletes a `Subscriber` object.
      operationId: deleteSubscriberById
      responses:
        204:
          description: |
            An empty response.
parameters:
  FilterEmailParam:
    name: email
    description: |
      Filter items by email.
    required: false
    in: query
    type: string
  FilterFirstNameParam:
    name: first_name
    description: |
      Filter items by first_name.
    required: false
    in: query
    type: string
  FilterLastNameParam:
    name: last_name
    description: |
      Filter items by last_name.
    required: false
    in: query
    type: string
  FilterSourceParam:
    name: source
    description: |
      Filter items by source.
    required: false
    in: query
    type: string
  FilterOrderIdParam:
    name: order_id
    description: |
      Filter items by order_id.
    required: false
    in: query
    type: integer
  FilterDateModifiedParam:
    name: date_modified
    description: |
      Filter items by date_modified.
    required: false
    in: query
    type: string
    format: date-time
  FilterDateCreatedParam:
    name: date_created
    description: |
      Filter items by date_created.
    required: false
    in: query
    type: string
    format: date-time
  PageParam:
    name: page
    description: |
      Specifies the page number in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  LimitParam:
    name: limit
    description: |
      Controls the number of items per page in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  SubscriberIdParam:
    name: subscriber_id
    in: path
    description: |
      The ID of the `Subscriber` requested.
    required: true
    type: integer
definitions:
  SubscriberCollectionResponse:
    description: |
      Response payload for the BigCommerce API.
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Subscriber"
      meta:
        $ref: "#/definitions/CollectionMeta"
  SubscriberResponse:
    description: |
      Response payload for the BigCommerce API.
    type: object
    properties:
      data:
        $ref: "#/definitions/Subscriber"
      meta:
        $ref: "#/definitions/Meta"
  SubscriberBase:
    type: object
    description:
      Common Subscriber properties.
    properties:
      id:
        type: integer
        description: |
          The unique numeric ID of the subscriber; increments sequentially.
        x-required:
          - put
      email:
        type: string
        description: |
          The email of the subscriber. Must be unique.
        x-required:
          - post
      first_name:
        type: string
        description: |
          The first name of the subscriber.
        minLength: 0
        maxLength: 255
      last_name:
        type: string
        description: |
          The last name of the subscriber.
        minLength: 0
        maxLength: 255
      source:
        type: string
        description: |
          The source of the subscriber. Values are: `storefront`, `order`, or `custom`.
        minLength: 0
        maxLength: 255
      order_id:
        type: integer
        description: |
          The ID of the source order, if source was an order.
        x-nullable: true
        minimum: 1
        maximum: 2147483647
  Subscriber:
    type: object
    allOf:
      - $ref: "#/definitions/SubscriberBase"
      - type: object
        properties:
          date_modified:
            type: string
            format: date-time
            description: |
              The date on which the subscriber was modified.
          date_created:
            type: string
            format: date-time
            description: |
              The date of which the subscriber was created.
  SubscriberPost:
    type: object
    description: |
      The model for a POST to create a subscriber.
    allOf:
      - $ref: "#/definitions/SubscriberBase"
  SubscriberPut:
    type: object
    description: |
      The model for a PUT to update a subscriber.
    allOf:
      - $ref: "#/definitions/SubscriberBase"
  CollectionMeta:
    type: object
    description: |
      Data about the response, including pagination and collection totals.
    properties:
      pagination:
        $ref: "#/definitions/Pagination"
  Pagination:
    type: object
    description: |
      Data about the response, including pagination and collection totals.
    properties:
      total:
        type: integer
        description: |
          Total number of items in the result set.
      count:
        type: integer
        description: |
          Total number of items in the collection response.
      per_page:
        type: integer
        description: |
          The amount of items returned in the collection per page, controlled by the limit parameter.
      current_page:
        type: integer
        description: |
          The page you are currently on within the collection.
      total_pages:
        type: integer
        description: |
          The total number of pages in the collection.
      links:
        type: object
        description: |
          Pagination links for the previous and next parts of the whole collection.
        properties:
          previous:
            type: string
            description: |
              Link to the previous page returned in the response.
          current:
            type: string
            description: |
              Link to the current page returned in the response.
          next:
            type: string
            description: |
              Link to the next page returned in the response.
  Meta:
    type: object
    description: Empty meta object; may be used later.
  ErrorResponse:
    allOf:
      - $ref: "#/definitions/BaseError"
      - type: object
        properties:
          errors:
            $ref: "#/definitions/DetailedErrors"
  BaseError:
    type: object
    description: |
      Error payload for the BigCommerce API.
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
  DetailedErrors:
    type: object
    additionalProperties:
      type: string
  NotFound:
    description: |
      Error payload for the BigCommerce API.
    type: object
    properties:
      status:
        description: |
          404 HTTP status code.
        type: integer
      title:
        description: The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
