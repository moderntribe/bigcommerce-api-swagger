swagger: "2.0"
info:
  title: BigCommerce API
  version: 3.0.0b
  description: A Swagger Document for the BigCommmerce v3 Price Lists API.
  termsOfService: "http://www.bigcommerce.com/terms"
host: api.bigcommerce.com
basePath: "/stores/{store_id}/v3"
tags:
  - name: PriceLists
    description: BigCommerce Price Lists API Definition.
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /pricelists:
    get:
      tags:
        - PriceLists
      description: |
        Returns a paginated collection of `Price List` objects from BigCommerce.
      operationId: getPriceListCollection
      parameters:
        - $ref: "#/parameters/FilterIdParam"
        - $ref: "#/parameters/FilterNameParam"
        - $ref: "#/parameters/FilterDateCreatedParam"
        - $ref: "#/parameters/FilterDateModifiedParam"
        - $ref: "#/parameters/PageParam"
        - $ref: "#/parameters/LimitParam"
      responses:
        200:
          description: |
            An array of Price Lists and metadata.
          schema:
            $ref: "#/definitions/PriceListCollectionResponse"
    post:
      tags:
        - PriceLists
      description: |
        Creates a `Price List` in BigCommerce.
      operationId: createPriceList
      parameters:
        - name: PriceList
          in: body
          required: true
          description: |
            A BigCommerce `PriceList` object.
          schema:
            $ref: "#/definitions/PriceListPost"
      responses:
        200:
          description: |
            A Price List.
          schema:
            $ref: "#/definitions/PriceListResponse"
        422:
          description: |
            `Price List` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            `Price List` was in conflict with another Price List. This is the result of duplicate unique values, such as `name`.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
        tags:
          - PriceLists
        description: |
          Deletes a set of `Price List` objects from BigCommerce using a filter. Also removes all associated Price Recordss.
        operationId: deletePriceListsByFilter
        parameters:
                - $ref: "#/parameters/FilterIdParam"
                - $ref: "#/parameters/FilterNameParam"
        responses:
          204:
            description: |
              An empty response.
  /pricelists/{price_list_id}:
    parameters:
      - $ref: "#/parameters/PriceListIdParam"
    get:
      tags:
        - PriceLists
      description: |
        Returns a `Price List` object from BigCommerce.
      operationId: getPriceList
      responses:
        200:
          description: |
            An array of Price Lists and metadata.
          schema:
            $ref: "#/definitions/PriceListResponse"
    put:
      tags:
        - PriceLists
      description: |
          Updates a single `Price List` object.
      operationId: updatePriceList
      parameters:
        - name: PriceList
          in: body
          required: true
          description: |
            A BigCommerce `Price List` object.
          schema:
            $ref: "#/definitions/PriceListPut"
      responses:
        200:
          description: |
            A Price List.
          schema:
            $ref: "#/definitions/PriceListResponse"
        404:
          description: |
            The resource was not found.
          schema:
            $ref: "#/definitions/NotFound"
        422:
          description: |
            `Price List` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            `Price List` was in conflict with another Price List. This is the result of duplicate unique values, such as `name`.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - PriceLists
      description: |
        Deletes one `Price List` object from BigCommerce by its ID. Also removes all associated Price Records.
      operationId: deletePriceList
      responses:
        204:
          description: |
            An empty response.
  /pricelists/{price_list_id}/records:
    parameters:
      - $ref: "#/parameters/PriceListIdParam"
    get:
      tags:
        - PriceLists
      description: |
        Fetches the `Price Records` associated with a particular Price List, using a filter.
      operationId: getPriceListRecordCollection
      parameters:
        - $ref: "#/parameters/FilterVariantIdParam"
        - $ref: "#/parameters/FilterProductIdParam"
        - $ref: "#/parameters/FilterCurrencyParam"
        - $ref: "#/parameters/PageParam"
        - $ref: "#/parameters/LimitParam"
        - $ref: "#/parameters/FilterIncludePriceRecordParam"
        - $ref: "#/parameters/FilterPriceParam"
        - $ref: "#/parameters/FilterSalePriceParam"
        - $ref: "#/parameters/FilterRetailPriceParam"
        - $ref: "#/parameters/FilterMapPriceParam"
        - $ref: "#/parameters/FilterCalculatedPriceParam"
        - $ref: "#/parameters/FilterDateCreatedParam"
        - $ref: "#/parameters/FilterDateModifiedParam"
        - $ref: "#/parameters/FilterSkuParam"
      responses:
        200:
          description: |
            An array of prices and metadata.
          schema:
            $ref: "#/definitions/PriceRecordCollectionResponse"
    put:
      tags:
        - PriceLists
      description: |
        Creates or updates a batch of `Price Records` associated with a particular Price List.
      operationId: setPriceListRecordCollection
      parameters:
        - name: X-Strict-Mode
          in: header
          type: integer
          required: false
          default: 0
          description: |
            Header that determines whether the Batch API operates in strict mode or not.  Strict mode will reject the entire request if any item in the batch has an error.
        - name: PriceRecordBatch
          in: body
          required: true
          description: |
            A BigCommerce `Price Record` request.
          schema:
            $ref: "#/definitions/PriceRecordCollectionPut"
      responses:
        200:
          description: |
           Success response for batch PUT of `Price Records`.
          schema:
            $ref: "#/definitions/SuccessBatchResponse"
        422:
          description: |
           Error response for batch PUT of `Price Records`.  May include errors during partial update in non-strict mode.
          schema:
            $ref: "#/definitions/PriceRecordBatchErrorResponse"
    delete:
      tags:
        - PriceLists
      description: |
        Deletes one or more `Price Record` objects from BigCommerce using a filter.
      operationId: deletePriceListRecordsByFilter
      parameters:
        - $ref: "#/parameters/FilterVariantIdParam"
      responses:
        204:
          description: |
            An empty response.
          schema:
            $ref: "#/definitions/NoContent"
  /pricelists/{price_list_id}/records/{variant_id}:
    parameters:
    - $ref: "#/parameters/PriceListIdParam"
    - $ref: "#/parameters/VariantIdParam"
    get:
      tags:
        - PriceLists
      description: |
        Fetches an array of `Price Records` matching a particular Price List and Variant ID. Will contain any set price records by currency.
      operationId: getPriceListRecordsByVariantId
      responses:
        200:
          description: |
            An array of prices and metadata.
          schema:
            $ref: "#/definitions/PriceRecordCollectionResponse"
    delete:
      tags:
        - PriceLists
      description: |
        Deletes the collection of `Price Record` objects associated with a certain price list and variant ID.
      operationId: deletePriceListRecordsByVariantId
      responses:
        204:
          description: |
            An empty response.
  /pricelists/{price_list_id}/records/{variant_id}/{currency_code}:
    parameters:
    - $ref: "#/parameters/PriceListIdParam"
    - $ref: "#/parameters/VariantIdParam"
    - $ref: "#/parameters/PriceRecordCurrencyParam"
    get:
      tags:
        - PriceLists
      description: |
        Returns a `Price Record` object from BigCommerce.
      operationId: getPriceListRecord
      parameters:
        - $ref: "#/parameters/FilterIncludePriceRecordParam"
      responses:
        200:
          description: |
            An array of prices and metadata.
          schema:
            $ref: "#/definitions/PriceRecordResponse"
    put:
      tags:
        - PriceLists
      description: |
          Creates or updates a single `Price Record` object.
      operationId: setPriceListRecord
      parameters:
        - name: PriceRecord
          in: body
          required: true
          description: |
            A BigCommerce `Price Record` object.
          schema:
            $ref: "#/definitions/PriceRecordPut"
      responses:
        200:
          description: |
            A price record.
          schema:
            $ref: "#/definitions/PriceRecordResponse"
        404:
          description: |
            The resource was not found.
          schema:
            $ref: "#/definitions/NotFound"
        422:
          description: |
            `Price Record` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            `Price Record` was in conflict with another price record. This is the result of duplicate unique values.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - PriceLists
      description: |
        Deletes one `Price Record` object from BigCommerce, by `variant_id`.
      operationId: deletePriceListRecord
      responses:
        204:
          description: |
            An empty response.
parameters:
  FilterIdParam:
    name: id
    description: |
      Filter items by id.
    required: false
    in: query
    type: integer
  FilterSkuParam:
    name: sku
    description: |
      Filter items by sku.
    required: false
    in: query
    type: string
  FilterNameParam:
    name: name
    description: |
      Filter items by name.
    required: false
    in: query
    type: string
  FilterEmailParam:
    name: email
    description: |
      Filter items by email.
    required: false
    in: query
    type: string
  FilterFirstNameParam:
    name: first_name
    description: |
      Filter items by first_name.
    required: false
    in: query
    type: string
  FilterLastNameParam:
    name: last_name
    description: |
      Filter items by last_name.
    required: false
    in: query
    type: string
  FilterSourceParam:
    name: source
    description: |
      Filter items by source.
    required: false
    in: query
    type: string
  FilterOrderIdParam:
    name: order_id
    description: |
      Filter items by order_id.
    required: false
    in: query
    type: integer
  FilterUpcParam:
    name: upc
    description: |
      Filter items by upc.
    required: false
    in: query
    type: string
  FilterPriceParam:
    name: price
    description: |
      Filter items by price.
    required: false
    in: query
    type: number
  FilterSalePriceParam:
    name: sale_price
    description: |
      Filter items by sale_price.
    required: false
    in: query
    type: number
  FilterRetailPriceParam:
    name: retail_price
    description: |
      Filter items by retail_price.
    required: false
    in: query
    type: number
  FilterMapPriceParam:
    name: map_price
    description: |
      Filter items by map_price.
    required: false
    in: query
    type: number
  FilterCalculatedPriceParam:
    name: calculated_price
    description: |
      Filter items by calculated_price.
    required: false
    in: query
    type: number
  FilterDateModifiedParam:
    name: date_modified
    description: |
      Filter items by date_modified.
    required: false
    in: query
    type: string
    format: date-time
  FilterDateCreatedParam:
    name: date_created
    description: |
      Filter items by date_created.
    required: false
    in: query
    type: string
    format: date-time
  FilterIncludePriceRecordParam:
    name: include
    description: |
      Sub-resources to include on a price record, in a comma-separated list. Valid expansions currently include `bulk_pricing_tiers` and `sku`.  Other valies will be ignored.
    required: false
    in: query
    type: string
  FilterPriceListIdParam:
     name: price_list_id
     description: |
       The ID of the `Price List`.
     required: false
     in: query
     type: integer
  FilterProductIdParam:
    type: string
    name: product_id
    in: query
    required: false
    description: |
      A comma-separated list of ids of `Product`s whose prices were requested.
  FilterVariantIdParam:
    type: integer
    name: variant_id
    in: query
    required: false
    description: |
      The ID of the `Variant` whose prices were requested.
  FilterCurrencyParam:
    name: currency
    description: |
      Filter items by currency.
    required: false
    in: query
    type: string
    format: ISO-4217
  PageParam:
    name: page
    description: |
      Specifies the page number in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  LimitParam:
    name: limit
    description: |
      Controls the number of items per page in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  PriceListIdParam:
    type: integer
    name: price_list_id
    in: path
    description: |
      The ID of the `Price List` requested.
    required: true
  PriceRecordCurrencyParam:
    name: currency_code
    type: string
    in: path
    description: |
      The currency code associated with the price record being acted upon.
    required: true
    format: ISO-4217
  VariantIdParam:
    name: variant_id
    in: path
    description: |
      ID of the variant on a product, or on an associated Price List Record.
    required: true
    type: integer
definitions:
  PriceListCollectionResponse:
    description: |
      Response payload for the BigCommerce API.
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/PriceList"
      meta:
        $ref: "#/definitions/CollectionMeta"
  PriceListResponse:
    description: |
      Response payload for the BigCommerce API.
    type: object
    properties:
      data:
        $ref: "#/definitions/PriceList"
      meta:
        $ref: "#/definitions/Meta"
  PriceListBase:
    type: object
    description: |
      Common Price List properties.
    properties:
      name:
        type: string
        description: |
          The unique name of the Price List.
        x-required:
          - post
      active:
        type: boolean
        description: |
          Whether or not this `Price List` and its prices are active.  Defaults to `true`.
  PriceList:
    type: object
    allOf:
      - type: object
        properties:
          id:
            type: integer
            description: |
              The unique numeric ID of the `Price List`; increments sequentially.
          date_created:
            type: string
            format: date-time
            description: |
              The date on which the `Price List` was created.
          date_modified:
            type: string
            format: date-time
            description: |
              The date on which the `Price List` was created.
      - $ref: "#/definitions/PriceListBase"
  PriceListPost:
    type: object
    allOf:
      - $ref: "#/definitions/PriceListBase"
    required:
      - name
  PriceListPut:
    type: object
    allOf:
      - $ref: "#/definitions/PriceListBase"
  PriceRecordCollectionResponse:
    description: |
      Response payload for the BigCommerce API.
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/PriceRecord"
      meta:
        $ref: "#/definitions/CollectionMeta"
  PriceRecordResponse:
    description: |
      Response payload for the BigCommerce API.
    type: object
    properties:
      data:
        $ref: "#/definitions/PriceRecord"
      meta:
        $ref: "#/definitions/Meta"
  PriceRecordBase:
    type: object
    description: |
      Common Price Record properties.
    properties:
      price:
        type: number
        format: double
        description: |
          The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product.
        x-required:
          - put
      sale_price:
        type: number
        format: double
        description: |
          The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant.
      retail_price:
       type: number
       format: double
       description: |
          The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product.  If empty, the retail price will be treated as not being set on this variant.
      map_price:
       type: number
       format: double
       description: |
          The MAP (Manufacturer's Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant.
      bulk_pricing_tiers:
        type: array
        items:
          $ref: "#/definitions/BulkPricingTier"
      sku:
        type: string
        description: |
          The SKU code associated with this `Price Record` if requested and it exists.
  PriceRecord:
    type: object
    description: |
      The comprehensive Price Record object.
    allOf:
      - type: object
        properties:
          calculated_price:
            type: number
            format: double
            description: |
              The price of the variant as seen on the storefront if a price record is in effect. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.  Read only.
          date_created:
            type: string
            format: date-time
            description: |
              The date on which the Price entry was created.
          date_modified:
            type: string
            format: date-time
            description: |
              The date on which the Price entry was created.
          product_id:
            type: integer
            description: |
              The id of the `Product` this `Price Record`'s variant_id is associated with.  Read only.
      - $ref: "#/definitions/PriceRecordBase"
      - $ref: "#/definitions/PriceRecordIdentifiers"
  BulkPricingTier:
    type: object
    properties:
      quantity_min:
        type: integer
        description: |
          The minimum quantity of associated variant in the cart needed to qualify for this tiers pricing.
      quantity_max:
        type: integer
        description: |
          The maximum allowed quantity of associated variant in the cart to qualify for this tiers pricing.
      type:
        type: string
        description: |
          The type of adjustment that is made. Acceptable values: price – the adjustment amount per product; percent – the adjustment as a percentage of the original price; fixed – the adjusted absolute price of the product.
      amount:
        type: number
        format: double
        description: |
          The price adjustment amount. This value along with the type will decide the price per variant for the pricing tier.
  PriceRecordPut:
    type: object
    allOf:
      - $ref: "#/definitions/PriceRecordBase"
  PriceRecordCollectionPut:
    type: array
    items:
      $ref: "#/definitions/PriceRecordBatchItem"
  PriceRecordBatchItem:
    type: object
    description: |
      `Price Record` object used in batch create or update.
    allOf:
      - type: object
        properties:
          variant_id:
            type: integer
            description: |
              The variant with which this price set is associated. Either variant_id or sku is required.
          sku:
            type: string
            description: |
              The sku for the variant with which this price set is associated.  Either sku or variant_id is required.
          currency:
            type: string
            format: ISO-4217
            description: |
              The 3-letter currency code with which this price set is associated.
      - $ref: "#/definitions/PriceRecordBase"
  PriceRecordIdentifiers:
    type: object
    description: |
      `Price Record` object used in batch create or update.
    allOf:
      - type: object
        properties:
          price_list_id:
            type: integer
            description: |
              The Price List with which this price set is associated.
          variant_id:
            type: integer
            description: |
              The variant with which this price set is associated. Either variant_id or sku is required.
          sku:
            type: string
            description: |
              The variant with which this price set is associated. Either sku or variant_id is required.
          currency:
            type: string
            format: ISO-4217
            description: |
              The 3-letter currency code with which this price set is associated.
  SuccessBatchResponse:
    type: object
    description: Empty object for Success case for Batch API.
  PriceRecordBatchErrorResponse:
    description: |
      Errors during batch usage for the BigCommerce API.
    type: object
    properties:
      batch_errors:
        type: array
        items:
          $ref: "#/definitions/PriceRecordBatchErrorSet"
  PriceRecordBatchErrorSet:
    description: |
      Error during `Price Record` batch PUT.  Includes data sent in the request and errors.
    type: object
    properties:
      data:
        $ref: "#/definitions/PriceRecordIdentifiers"
      field_errors:
        $ref: "#/definitions/DetailedErrors"
  CollectionMeta:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        pagination:
          $ref: "#/definitions/Pagination"
  Pagination:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
  Meta:
    type: object
    description: Empty meta object; may be used later.
  ErrorResponse:
    allOf:
    - $ref: "#/definitions/BaseError"
    - type: object
      properties:
        errors:
          $ref: "#/definitions/DetailedErrors"
  BaseError:
    type: object
    description: |
      Error payload for the BigCommerce API.
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
  DetailedErrors:
    type: object
    additionalProperties:
      type: string
  NotFound:
    description: |
      Error payload for the BigCommerce API.
    type: object
    properties:
      status:
        description: |
          404 HTTP status code.
        type: integer
      title:
        description: The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
  NoContent:
    description: |
      No-content response for the BigCommerce API.
    type: object
    properties:
      status:
        description: |
          204 HTTP status code.
        type: integer
      title:
        description: The error title describing the situation.
        type: string
      type:
        type: string
      instance:
        type: string
